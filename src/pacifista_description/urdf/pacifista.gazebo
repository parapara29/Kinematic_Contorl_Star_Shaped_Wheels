<?xml version="1.0" ?>
<robot name="pacifista" xmlns:xacro="http://www.ros.org/wiki/xacro" >

<xacro:property name="body_color" value="Gazebo/Silver" />

<gazebo>
  <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
    <robotNamespace>/pacifista</robotNamespace>
    </plugin>
</gazebo>
<gazebo reference="base_link">
  <material>${body_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <selfCollide>true</selfCollide>
  <gravity>true</gravity>
</gazebo>

<gazebo reference="wh_r_frwd_1">
  <material>${body_color}</material>
  <mu1>20</mu1>
  <mu2>20</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="wh_l_frwd_1">
  <material>${body_color}</material>
  <mu1>20</mu1>
  <mu2>20</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="wh_r_bck_1">
  <material>${body_color}</material>
  <mu1>20</mu1>
  <mu2>20</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="wh_l_bck_1">
  <material>${body_color}</material>
  <mu1>20</mu1>
  <mu2>20</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="lidar_1">
  <material>${body_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <selfCollide>true</selfCollide>
  <sensor type="ray" name="head_hokuyo_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-3.14159</min_angle>
            <max_angle>3.14159</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.5</min>
          <max>12.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_rplidar_controller" filename="libgazebo_ros_laser.so">
        <topicName>/scan</topicName>
        <robotNamespace>/laser_scan/scan</robotNamespace>
        <frameName>lidar_1</frameName>
      </plugin>
    </sensor>
</gazebo>

<gazebo>
  <plugin name="skid_steer_drive_controller" filename="libgazebo_ros_skid_steer_drive.so">
    <updateRate>100.0</updateRate>
    <robotNamespace>/pacifista</robotNamespace>
    <leftFrontJoint>Rev2</leftFrontJoint>
    <rightFrontJoint>Rev1</rightFrontJoint>
    <command>/pacifista/cmd_vel</command>
    <leftRearJoint>Rev4</leftRearJoint>
    <rightRearJoint>Rev3</rightRearJoint>
    <wheelSeparation>0.3</wheelSeparation>
    <wheelDiameter>0.276</wheelDiameter>
    <robotBaseFrame>base_footprint</robotBaseFrame>
    <torque>100</torque>
    <topicName>/pacifista/cmd_vel</topicName>
    <broadcastTF>false</broadcastTF>
    <!-- Topic to publish nav_msgs/Odometry messages, defaults to `odom` -->
    <odometryTopic>/odom</odometryTopic>

    <!-- Odometry frame, defaults to `odom` -->
    <odometryFrame>/odom</odometryFrame>
    <!-- Odometry source, 0 for ENCODER, 1 for WORLD, defaults to WORLD -->
    <odometrySource>1</odometrySource>

    <!-- Set to true to publish transforms for the odometry, defaults to true -->
    <publishOdom>false</publishOdom>
<!--  -->
    <!-- Set to true to publish sensor_msgs/JointState on /joint_states for the wheel joints, defaults to false -->
    <publishWheelJointState>true</publishWheelJointState>
  </plugin>
</gazebo>

</robot>
